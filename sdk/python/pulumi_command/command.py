# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['CommandArgs', 'Command']

@pulumi.input_type
class CommandArgs:
    def __init__(__self__, *,
                 create: pulumi.Input['CmdArgs'],
                 delete: Optional[pulumi.Input['CmdArgs']] = None,
                 diff: Optional[pulumi.Input['CmdArgs']] = None,
                 read: Optional[pulumi.Input['CmdArgs']] = None,
                 update: Optional[pulumi.Input['CmdArgs']] = None):
        """
        The set of arguments for constructing a Command resource.
        :param pulumi.Input['CmdArgs'] create: Define a command to create a resource.
        :param pulumi.Input['CmdArgs'] diff: Specify a command to run to diff the resource.
               
               Exit 0 to run update.
               Exit with a non-zero value or omit to disable update.
               Hint: an easy method to always run update is to set diff to `['true']`
        :param pulumi.Input['CmdArgs'] read: Define a command to create read the resource.
        :param pulumi.Input['CmdArgs'] update: If unspecified, create definition will be used. Define to provide an alternate update command.
        """
        pulumi.set(__self__, "create", create)
        if delete is not None:
            pulumi.set(__self__, "delete", delete)
        if diff is not None:
            pulumi.set(__self__, "diff", diff)
        if read is not None:
            pulumi.set(__self__, "read", read)
        if update is not None:
            pulumi.set(__self__, "update", update)

    @property
    @pulumi.getter
    def create(self) -> pulumi.Input['CmdArgs']:
        """
        Define a command to create a resource.
        """
        return pulumi.get(self, "create")

    @create.setter
    def create(self, value: pulumi.Input['CmdArgs']):
        pulumi.set(self, "create", value)

    @property
    @pulumi.getter
    def delete(self) -> Optional[pulumi.Input['CmdArgs']]:
        return pulumi.get(self, "delete")

    @delete.setter
    def delete(self, value: Optional[pulumi.Input['CmdArgs']]):
        pulumi.set(self, "delete", value)

    @property
    @pulumi.getter
    def diff(self) -> Optional[pulumi.Input['CmdArgs']]:
        """
        Specify a command to run to diff the resource.

        Exit 0 to run update.
        Exit with a non-zero value or omit to disable update.
        Hint: an easy method to always run update is to set diff to `['true']`
        """
        return pulumi.get(self, "diff")

    @diff.setter
    def diff(self, value: Optional[pulumi.Input['CmdArgs']]):
        pulumi.set(self, "diff", value)

    @property
    @pulumi.getter
    def read(self) -> Optional[pulumi.Input['CmdArgs']]:
        """
        Define a command to create read the resource.
        """
        return pulumi.get(self, "read")

    @read.setter
    def read(self, value: Optional[pulumi.Input['CmdArgs']]):
        pulumi.set(self, "read", value)

    @property
    @pulumi.getter
    def update(self) -> Optional[pulumi.Input['CmdArgs']]:
        """
        If unspecified, create definition will be used. Define to provide an alternate update command.
        """
        return pulumi.get(self, "update")

    @update.setter
    def update(self, value: Optional[pulumi.Input['CmdArgs']]):
        pulumi.set(self, "update", value)


class Command(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 create: Optional[pulumi.Input[pulumi.InputType['CmdArgs']]] = None,
                 delete: Optional[pulumi.Input[pulumi.InputType['CmdArgs']]] = None,
                 diff: Optional[pulumi.Input[pulumi.InputType['CmdArgs']]] = None,
                 read: Optional[pulumi.Input[pulumi.InputType['CmdArgs']]] = None,
                 update: Optional[pulumi.Input[pulumi.InputType['CmdArgs']]] = None,
                 __props__=None):
        """
        Execute a Command and save it as a resource.

        Each command can be specified as an object or a convenience array. If only `create` is specified, `update` will use the create definition. The `compare` property will be JSON serialized with a hash saved in the state. This is useful to ensure update is run if dependendent resources change.

        An update will occur in these cases:
        1. The `compare` hash or the `update` arguments change.
        2. The specified `diff` command exits with an error.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['CmdArgs']] create: Define a command to create a resource.
        :param pulumi.Input[pulumi.InputType['CmdArgs']] diff: Specify a command to run to diff the resource.
               
               Exit 0 to run update.
               Exit with a non-zero value or omit to disable update.
               Hint: an easy method to always run update is to set diff to `['true']`
        :param pulumi.Input[pulumi.InputType['CmdArgs']] read: Define a command to create read the resource.
        :param pulumi.Input[pulumi.InputType['CmdArgs']] update: If unspecified, create definition will be used. Define to provide an alternate update command.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CommandArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Execute a Command and save it as a resource.

        Each command can be specified as an object or a convenience array. If only `create` is specified, `update` will use the create definition. The `compare` property will be JSON serialized with a hash saved in the state. This is useful to ensure update is run if dependendent resources change.

        An update will occur in these cases:
        1. The `compare` hash or the `update` arguments change.
        2. The specified `diff` command exits with an error.

        :param str resource_name: The name of the resource.
        :param CommandArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CommandArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 create: Optional[pulumi.Input[pulumi.InputType['CmdArgs']]] = None,
                 delete: Optional[pulumi.Input[pulumi.InputType['CmdArgs']]] = None,
                 diff: Optional[pulumi.Input[pulumi.InputType['CmdArgs']]] = None,
                 read: Optional[pulumi.Input[pulumi.InputType['CmdArgs']]] = None,
                 update: Optional[pulumi.Input[pulumi.InputType['CmdArgs']]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CommandArgs.__new__(CommandArgs)

            if create is None and not opts.urn:
                raise TypeError("Missing required property 'create'")
            __props__.__dict__["create"] = create
            __props__.__dict__["delete"] = delete
            __props__.__dict__["diff"] = diff
            __props__.__dict__["read"] = read
            __props__.__dict__["update"] = update
            __props__.__dict__["compare"] = None
            __props__.__dict__["stderr"] = None
            __props__.__dict__["stdout"] = None
        super(Command, __self__).__init__(
            'command:v1:Command',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'Command':
        """
        Get an existing Command resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = CommandArgs.__new__(CommandArgs)

        __props__.__dict__["compare"] = None
        __props__.__dict__["create"] = None
        __props__.__dict__["delete"] = None
        __props__.__dict__["diff"] = None
        __props__.__dict__["read"] = None
        __props__.__dict__["stderr"] = None
        __props__.__dict__["stdout"] = None
        __props__.__dict__["update"] = None
        return Command(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def compare(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "compare")

    @property
    @pulumi.getter
    def create(self) -> pulumi.Output[Optional['outputs.Cmd']]:
        """
        Define a command to create a resource.
        """
        return pulumi.get(self, "create")

    @property
    @pulumi.getter
    def delete(self) -> pulumi.Output[Optional['outputs.Cmd']]:
        return pulumi.get(self, "delete")

    @property
    @pulumi.getter
    def diff(self) -> pulumi.Output[Optional['outputs.Cmd']]:
        """
        Specify a command to run to diff the resource.

        Exit 0 to run update.
        Exit with a non-zero value or omit to disable update.
        Hint: an easy method to always run update is to set diff to `['true']`
        """
        return pulumi.get(self, "diff")

    @property
    @pulumi.getter
    def read(self) -> pulumi.Output[Optional['outputs.Cmd']]:
        """
        Define a command to create read the resource.
        """
        return pulumi.get(self, "read")

    @property
    @pulumi.getter
    def stderr(self) -> pulumi.Output[Optional[str]]:
        """
        stderr of the command
        """
        return pulumi.get(self, "stderr")

    @property
    @pulumi.getter
    def stdout(self) -> pulumi.Output[Optional[str]]:
        """
        stdout of the command
        """
        return pulumi.get(self, "stdout")

    @property
    @pulumi.getter
    def update(self) -> pulumi.Output[Optional['outputs.Cmd']]:
        """
        If unspecified, create definition will be used. Define to provide an alternate update command.
        """
        return pulumi.get(self, "update")

